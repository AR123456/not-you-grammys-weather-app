{"version":3,"sources":["styles/index.js","utils/API.js","components/SearchBar.js","components/DayCard.js","components/DayDetail.js","App.js","serviceWorker.js","index.js"],"names":["outline","concat","Wrapper","styled","Container","_templateObject","FormWrapper","Form","_templateObject2","DayWrapper","div","_templateObject3","props","isActive","DetailsWrapper","Card","_templateObject4","API","city","axios","get","process","SearchBar","react_default","a","createElement","inline","onSubmit","handleFormSubmit","FormGroup","Label","for","hidden","Input","type","name","id","placeholder","value","searchTerm","onChange","handleInputChange","Button","color","onClick","DayCard","Col","selectDay","CardHeader","day","CardBody","current","toFixed","src","icon","alt","description","high","low","DayDetails","date","location","apparentHigh","apparentLow","precip","windSpeed","windDirection","toUpperCase","substring","App","_useState","useState","selectedDay","days","_useState2","Object","slicedToArray","data","setData","useEffect","getWeather","document","title","address","then","res","city_name","state_code","objectSpread2","catch","err","console","log","alert","length","Fragment","Row","md","components_SearchBar","event","target","preventDefault","map","components_DayCard","key","ts","moment","valid_date","format","temp","max_temp","min_temp","pop","weather","DayDetail","app_max_temp","app_min_temp","wind_spd","wind_cdir_full","style","padding","margin","width","height","className","aria-hidden","Boolean","window","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"mgDAGA,IACMA,EAAO,aAAAC,OADA,WAGAC,EAAUC,YAAOC,IAAPD,CAAHE,KASPC,EAAcH,YAAOI,IAAPJ,CAAHK,KAYXC,EAAaN,IAAOO,IAAVC,IAODX,EAIJ,SAAAY,GAAK,OAAIA,EAAMC,SAAWb,EAAU,MAIhC,SAAAY,GAAK,OAAIA,EAAMC,SAvCxB,UAuC0C,MAC9B,SAAAD,GAAK,OAAIA,EAAMC,SAAWb,EAAU,MAE5C,SAAAY,GAAK,OAAIA,EAAMC,SAAW,QAAU,MAC9B,SAAAD,GAAK,OAAIA,EAAMC,SAAW,IAAM,OAQ1CC,EAAiBX,YAAOY,IAAPZ,CAAHa,IACbhB,oBCnDCiB,EACD,SAASC,GACnB,OAAOC,IAAMC,IAAN,qEAAAnB,OAJQoB,mCAIR,UAAApB,OACmFiB,qCCgB/EI,EAnBG,SAAAV,GACd,OACIW,EAAAC,EAAAC,cAACnB,EAAD,CAAaoB,QAAM,EAACC,SAAUf,EAAMgB,kBAChCL,EAAAC,EAAAC,cAACI,EAAA,EAAD,KACIN,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOC,IAAI,SAASC,QAAM,GAA1B,sBACAT,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACIC,KAAK,OACLC,KAAK,SACLC,GAAG,SACHC,YAAY,6CACZC,MAAO1B,EAAM2B,WACbC,SAAU5B,EAAM6B,qBAGxBlB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,CAAQC,MAAM,OAAOC,QAAShC,EAAMgB,kBAApC,4BCIGiB,EAlBC,SAAAjC,GACZ,OACIW,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAKF,QAAShC,EAAMmC,WAChBxB,EAAAC,EAAAC,cAAChB,EAAD,CAAYI,SAAUD,EAAMC,UACxBU,EAAAC,EAAAC,cAACV,EAAA,EAAD,KACIQ,EAAAC,EAAAC,cAACuB,EAAA,EAAD,KAAapC,EAAMqC,KACnB1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACI3B,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,cAASb,EAAMuC,QAAQC,QAAQ,GAA/B,SACJ7B,EAAAC,EAAAC,cAAA,OAAK4B,IAAG,GAAApD,OAAKoB,gCAAL,WAAApB,OAAqCW,EAAM0C,KAA3C,QAAuDC,IAAK3C,EAAM4C,cAC1EjC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,uBAAH,IAA2Bb,EAAM6C,KAAKL,QAAQ,GAA9C,QACA7B,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,sBAAH,IAA0Bb,EAAM8C,IAAIN,QAAQ,GAA5C,aCQTO,EAlBI,SAAA/C,GACf,OACIW,EAAAC,EAAAC,cAACX,EAAD,KACIS,EAAAC,EAAAC,cAACyB,EAAA,EAAD,KACI3B,EAAAC,EAAAC,cAAA,iCAAyBb,EAAMgD,KAA/B,OAAyChD,EAAMiD,UAC/CtC,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,cAASb,EAAMuC,QAAQC,QAAQ,GAA/B,SACJ7B,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,OAAK4B,IAAG,GAAApD,OAAKoB,gCAAL,WAAApB,OAAqCW,EAAM0C,KAA3C,QAAuDC,IAAK3C,EAAM4C,eAC7EjC,EAAAC,EAAAC,cAAA,UAAKb,EAAM4C,aACXjC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,uBAAH,IAA2Bb,EAAM6C,KAAKL,QAAQ,GAA9C,UAAqD7B,EAAAC,EAAAC,cAAA,6BAArD,IAAmFb,EAAMkD,aAAaV,QAAQ,GAA9G,QACA7B,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,sBAAH,IAA0Bb,EAAM8C,IAAIN,QAAQ,GAA5C,UAAmD7B,EAAAC,EAAAC,cAAA,6BAAnD,IAAiFb,EAAMmD,YAAYX,QAAQ,GAA3G,QACA7B,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,gCAAH,IAAoCb,EAAMoD,OAA1C,YACAzC,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,6BAAH,IAAiCb,EAAMqD,WACvC1C,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,iCAAH,IAAqCb,EAAMsD,cAAc,GAAGC,cAAgBvD,EAAMsD,cAAcE,UAAU,OC+G3GC,EAtHH,WAAM,IAAAC,EACQC,mBAAS,CAC/BhC,WAAY,GACZiC,YAAa,KACbX,SAAU,GACVY,KAAM,KALQC,EAAAC,OAAAC,EAAA,EAAAD,CAAAL,EAAA,GACTO,EADSH,EAAA,GACHI,EADGJ,EAAA,GAORnC,EAA4CsC,EAA5CtC,WAAYiC,EAAgCK,EAAhCL,YAAaX,EAAmBgB,EAAnBhB,SAAUY,EAASI,EAATJ,KAE3CM,oBAAU,WACRC,EAAW,eAEV,IAEHD,oBAAU,WACRE,SAASC,MAAT,uBAAAjF,OAAwC4D,EAAW,OAASA,EAAW,KACtE,CAACA,IAEJ,IAAMmB,EAAa,SAAAG,GACbA,EACFlE,EAAekE,GACZC,KAAK,SAAAC,GAEFP,EADEO,EACM,CACN9C,WAAY,GACZiC,YAAa,KACbX,SAAQ,GAAA5D,OAAKoF,EAAIR,KAAKS,UAAd,MAAArF,OAA4BoF,EAAIR,KAAKU,YAC7Cd,KAAMY,EAAIR,KAAKA,MAGTF,OAAAa,EAAA,EAAAb,CAAA,GACHE,EADE,CAELtC,WAAY,GACZiC,YAAa,UAIlBiB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,KAE5BG,MAAM,uDAaV,OACEtE,EAAAC,EAAAC,cAACvB,EAAD,KACIuE,EAAKqB,OAKLvE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuE,SAAA,KACExE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,KACEzE,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAKmD,GAAI,GACP1E,EAAAC,EAAAC,cAAA,yBAAiBoC,IAEnBtC,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAKmD,GAAI,GACP1E,EAAAC,EAAAC,cAACyE,EAAD,CACE3D,WAAYA,EACZE,kBAxBY,SAAA0D,GACxBrB,EAAQH,OAAAa,EAAA,EAAAb,CAAA,GAAKE,EAAN,CAAYtC,WAAY4D,EAAMC,OAAO9D,UAwBhCV,iBArBW,SAAAuE,GACvBA,EAAME,iBACNrB,EAAWzC,QAuBLhB,EAAAC,EAAAC,cAACuE,EAAA,EAAD,KACGvB,EAAK6B,IAAI,SAAArD,GAAG,OACX1B,EAAAC,EAAAC,cAAC8E,EAAD,CACEC,IAAKvD,EAAIwD,GACTxD,IAAKyD,IAAOzD,EAAI0D,WAAY,cAAcC,OAAO,QACjDzD,QAASF,EAAI4D,KACbpD,KAAMR,EAAI6D,SACVpD,IAAKT,EAAI8D,SACT/C,OAAQf,EAAI+D,IACZ1D,KAAML,EAAIgE,QAAQ3D,KAClBE,YAAaP,EAAIgE,QAAQzD,YACzBT,UAAW,kBAAM+B,EAAQH,OAAAa,EAAA,EAAAb,CAAA,GAAKE,EAAN,CAAYL,YAAavB,MACjDpC,SAAUoC,IAAQuB,OAIxBjD,EAAAC,EAAAC,cAACuE,EAAA,EAAD,KACEzE,EAAAC,EAAAC,cAACqB,EAAA,EAAD,KACG0B,EACCjD,EAAAC,EAAAC,cAACyF,EAAD,CACEtD,KAAM8C,IAAOlC,EAAYmC,WAAY,cAAcC,OACjD,uBAEF/C,SAAUA,EACVV,QAASqB,EAAYqC,KACrBpD,KAAMe,EAAYsC,SAClBhD,aAAcU,EAAY2C,aAC1BzD,IAAKc,EAAYuC,SACjBhD,YAAaS,EAAY4C,aACzBpD,OAAQQ,EAAYwC,IACpB1D,KAAMkB,EAAYyC,QAAQ3D,KAC1BW,UAAWO,EAAY6C,SACvBnD,cAAeM,EAAY8C,eAC3B9D,YAAagB,EAAYyC,QAAQzD,cAGnCjC,EAAAC,EAAAC,cAAA,mDArDRF,EAAAC,EAAAC,cAAA,OAAK8F,MAAO,CAAEC,QAAS,UAAWC,QAAS,EAAGC,MAAO,GAAIC,OAAQ,KAC/DpG,EAAAC,EAAAC,cAAA,KAAGmG,UAAU,8BAA8BC,cAAY,YCrD7CC,QACW,cAA7BC,OAAOlE,SAASmE,UAEe,UAA7BD,OAAOlE,SAASmE,UAEhBD,OAAOlE,SAASmE,SAASC,MACvB,2DCZNC,IAASC,OAAO5G,EAAAC,EAAAC,cAAC2G,EAAD,MAASnD,SAASoD,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpD,KAAK,SAAAqD,GACjCA,EAAaC","file":"static/js/main.b3168093.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { Container, Card, Form } from \"reactstrap\";\n\nconst teal = \"#17a2b8\";\nconst outline = `2px solid ${teal}`;\n\nexport const Wrapper = styled(Container)`\n    .row:first-child {\n        margin: 1.5em -15px;\n    }\n    .col > h2 {\n        margin-top: 1em;\n    }\n`\n\nexport const FormWrapper = styled(Form)`\n    justify-content: flex-end;\n    margin-top: 1em;\n    input.form-control {\n        border-radius: .25rem 0 0 .25rem;\n        width: 325px;\n    }\n    button {\n        border-radius: 0 .25rem .25rem 0;\n    }\n`\n\nexport const DayWrapper = styled.div`\n    cursor: pointer;\n    .card {\n        border-width: 2px;\n    }\n    &:hover {\n        .card {\n            border: ${outline};\n        }\n    }\n    .card {\n        border: ${props => props.isActive ? outline : null};\n        text-align: center;\n    }\n    .card-header {\n        background: ${props => props.isActive ? teal : null};\n        border-bottom: ${props => props.isActive ? outline : null};\n        border-bottom-width: 2px;\n        color: ${props => props.isActive ? \"white\" : null};\n        font-weight: ${props => props.isActive ? 700 : null};\n        padding: .75rem 1rem;\n    }\n    img {\n        width: 75px;\n    }\n`\n\nexport const DetailsWrapper = styled(Card)`\n    border: ${outline};\n    margin: 1em 0;\n    text-align: center;\n    h3 {\n        font-size: 2.5rem;\n        font-weight: 500;\n        margin-top: .5em;\n    }\n    h4 {\n        padding-bottom: 1em;\n    }\n`","import axios from \"axios\";\n\nconst weatherKey = process.env.REACT_APP_WEATHERBIT_KEY;\n\nexport default {\n  getWeather: function(city) {\n    return axios.get(\n      `https://api.weatherbit.io/v2.0/forecast/daily?&days=7&units=I&key=${weatherKey}&city=${city}`\n    );\n  }\n};\n","import React from \"react\";\nimport { FormGroup, Label, Input, Button } from \"reactstrap\";\nimport { FormWrapper } from \"../styles\";\n\nconst SearchBar = props => {\n    return (\n        <FormWrapper inline onSubmit={props.handleFormSubmit}>\n            <FormGroup>\n                <Label for=\"search\" hidden>Search by Location</Label>\n                <Input \n                    type=\"text\" \n                    name=\"search\" \n                    id=\"search\" \n                    placeholder=\"Search by address, city/state, or zip code\" \n                    value={props.searchTerm}\n                    onChange={props.handleInputChange}\n                />\n            </FormGroup>\n            <Button color=\"info\" onClick={props.handleFormSubmit}>Search</Button>\n        </FormWrapper>\n    )\n}\n\nexport default SearchBar;","import React from \"react\";\nimport { Col, Card, CardHeader, CardBody } from \"reactstrap\";\nimport { DayWrapper } from \"../styles\";\n\nconst DayCard = props => {\n    return (\n        <Col onClick={props.selectDay}>\n            <DayWrapper isActive={props.isActive}>\n                <Card>\n                    <CardHeader>{props.day}</CardHeader>\n                    <CardBody>\n                        <h3><strong>{props.current.toFixed(1)}°</strong></h3>\n                        <img src={`${process.env.PUBLIC_URL}/icons/${props.icon}.png`} alt={props.description} />\n                        <p><strong>High:</strong> {props.high.toFixed(1)}°</p>\n                        <p><strong>Low:</strong> {props.low.toFixed(1)}°</p>\n                    </CardBody>\n                </Card>\n            </DayWrapper>\n        </Col>\n    )\n}\n\nexport default DayCard;","import React from \"react\";\nimport { CardBody } from \"reactstrap\";\nimport { DetailsWrapper } from \"../styles\";\n\nconst DayDetails = props => {\n    return (\n        <DetailsWrapper>\n            <CardBody>\n                <h2>Weather Details for {props.date} in {props.location}</h2>\n                <h3><strong>{props.current.toFixed(1)}°</strong></h3>\n                <p><img src={`${process.env.PUBLIC_URL}/icons/${props.icon}.png`} alt={props.description} /></p>\n                <h4>{props.description}</h4>\n                <p><strong>High:</strong> {props.high.toFixed(1)}° / <strong>Feels Like:</strong> {props.apparentHigh.toFixed(1)}°</p>\n                <p><strong>Low:</strong> {props.low.toFixed(1)}° / <strong>Feels Like:</strong> {props.apparentLow.toFixed(1)}°</p>\n                <p><strong>Precipitation:</strong> {props.precip}% chance</p>\n                <p><strong>Wind Speed:</strong> {props.windSpeed}</p>\n                <p><strong>Wind Direction:</strong> {props.windDirection[0].toUpperCase() + props.windDirection.substring(1)}</p>\n            </CardBody>\n        </DetailsWrapper>    \n    )\n}\n\nexport default DayDetails;","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { Row, Col } from \"reactstrap\";\nimport { Wrapper } from \"./styles\";\nimport API from \"./utils/API\";\nimport SearchBar from \"./components/SearchBar\";\nimport DayCard from \"./components/DayCard\";\nimport DayDetail from \"./components/DayDetail\";\n\nconst App = () => {\n  const [data, setData] = useState({\n    searchTerm: \"\",\n    selectedDay: null,\n    location: \"\",\n    days: []\n  });\n  const { searchTerm, selectedDay, location, days } = data;\n\n  useEffect(() => {\n    getWeather(\"Aurora, CO\");\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    document.title = `This week's weather ${location ? \"for \" + location : \"\"}`;\n  }, [location]);\n\n  const getWeather = address => {\n    if (address) {\n      API.getWeather(address)\n        .then(res => {\n          if (res) {\n            setData({\n              searchTerm: \"\",\n              selectedDay: null,\n              location: `${res.data.city_name}, ${res.data.state_code}`,\n              days: res.data.data\n            });\n          } else {\n            setData({\n              ...data,\n              searchTerm: \"\",\n              selectedDay: null\n            });\n          }\n        })\n        .catch(err => console.log(err));\n    } else {\n      alert(\"Search a location to get this week's weather data!\");\n    }\n  };\n\n  const handleInputChange = event => {\n    setData({ ...data, searchTerm: event.target.value });\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    getWeather(searchTerm);\n  };\n\n  return (\n    <Wrapper>\n      {!days.length ? (\n        <div style={{ padding: \"20% 50%\", margin: -8, width: 16, height: 16 }}>\n          <i className=\"fa fa-spinner fa-spin fa-3x\" aria-hidden=\"true\" />\n        </div>\n      ) : (\n        <>\n          <Row>\n            <Col md={7}>\n              <h1>Weather for {location}</h1>\n            </Col>\n            <Col md={5}>\n              <SearchBar\n                searchTerm={searchTerm}\n                handleInputChange={handleInputChange}\n                handleFormSubmit={handleFormSubmit}\n              />\n            </Col>\n          </Row>\n          <Row>\n            {days.map(day => (\n              <DayCard\n                key={day.ts}\n                day={moment(day.valid_date, \"YYYY-MM-DD\").format(\"dddd\")}\n                current={day.temp}\n                high={day.max_temp}\n                low={day.min_temp}\n                precip={day.pop}\n                icon={day.weather.icon}\n                description={day.weather.description}\n                selectDay={() => setData({ ...data, selectedDay: day })}\n                isActive={day === selectedDay}\n              />\n            ))}\n          </Row>\n          <Row>\n            <Col>\n              {selectedDay ? (\n                <DayDetail\n                  date={moment(selectedDay.valid_date, \"YYYY-MM-DD\").format(\n                    \"dddd, MMMM Do, YYYY\"\n                  )}\n                  location={location}\n                  current={selectedDay.temp}\n                  high={selectedDay.max_temp}\n                  apparentHigh={selectedDay.app_max_temp}\n                  low={selectedDay.min_temp}\n                  apparentLow={selectedDay.app_min_temp}\n                  precip={selectedDay.pop}\n                  icon={selectedDay.weather.icon}\n                  windSpeed={selectedDay.wind_spd}\n                  windDirection={selectedDay.wind_cdir_full}\n                  description={selectedDay.weather.description}\n                />\n              ) : (\n                <h2>Select a day above to get details!</h2>\n              )}\n            </Col>\n          </Row>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}